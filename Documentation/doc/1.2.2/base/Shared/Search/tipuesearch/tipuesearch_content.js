var tipuesearch={"pages": [{"title":"Command Line Options","text":"Doctran can be supplied with the command-line options shown below.","tags":"","category":"","url":globals.prefix+"command-line-options.html"},{"title":"Welcome to Doctran 1.2.2","text":" Doctran is a documentation generator for generating API documentation in HTML format from modern Fortran source code. It has full support for Fortran 95 standard and the object oriented parts of the Fortran 2003 standard.","tags":"","category":"","url":globals.prefix+"index.html"},{"title":"Menu Files","text":"A menu file is just a HTML (.html) or markdown (.md or .markdown) file containing a list of links you want to appear in the documentation menu. Items can either be simple links or special macros that will insert lists of links generated from your Fortran source code. Files should should only contain the list in your chosen markup and not any boilerplate tags such as <html> or <body>.","tags":"","category":"","url":globals.prefix+"menu-files.html"},{"title":"Project Files","text":"The project file is simply a plain text file that contains information about your project. You can specify a project file using the --project_info option.","tags":"","category":"","url":globals.prefix+"project-files.html"},{"title":"User Page Files","text":"A user page file can be either be a html (.html) or markdown (.md or .markdown) file. This file should contain the content you want to be displayed in your chosen markup. To include a user page file within your project use the UserPage element in your project file.","tags":"","category":"","url":globals.prefix+"user-page-files.html"},{"title":"What's New","text":"","tags":"","category":"","url":globals.prefix+"what-s-new.html"},{"title":"Generating a Static Wiki","text":"Doctran can be used as a static wiki generator. Meaning that given a collection of Markdown or HTML files, Doctran will transform these into styled HTML documents with a title, menu and search. Of course, the following can be combined with document generator capabilities to produce quality documentation.","tags":"","category":"","url":globals.prefix+"getting-started/generating-a-static-wiki.html"},{"title":"System Requirements and Installation","text":"The minimum hardware requirements for Doctran are as follows:","tags":"","category":"","url":globals.prefix+"getting-started/system-requirements-and-installation.html"},{"title":"Your First Documentation","text":"Doctran can only be run from the command line. The most basic syntax for running Doctran is ","tags":"","category":"","url":globals.prefix+"getting-started/your-first-documentation.html"},{"title":"Author","text":"Use this to specify any additional authors not specified using author elements within the source.  This can be specified multiple times and take the following form:","tags":"","category":"","url":globals.prefix+"project-files/types/author.html"},{"title":"Copy","text":"Instructs that the content at a path should be copied to the output folder. This can be specified multiple times and takes the following form:","tags":"","category":"","url":globals.prefix+"project-files/types/copy.html"},{"title":"CopyAndParse","text":"Instructs that the content at a path should be parse and then copied to the output folder. This can be specified multiple times and takes the following form:","tags":"","category":"","url":globals.prefix+"project-files/types/copyandparse.html"},{"title":"Menu","text":"Specifies a menu file that contains the menu for the generated documentation. This can be specified only once and takes the following form:","tags":"","category":"","url":globals.prefix+"project-files/types/menu.html"},{"title":"Name","text":"The name of the project to be display within the header and title. This should be specified only once and take the following form:","tags":"","category":"","url":globals.prefix+"project-files/types/name.html"},{"title":"Searchable","text":"The type of code block that should be indexed and viewable within the documentation search results. This should be specified only once and take the following form:","tags":"","category":"","url":globals.prefix+"project-files/types/searchable.html"},{"title":"ShowSource","text":"The type of code block that syntax highlighted source code should be included on its page. This should be specified only once and take the following form:","tags":"","category":"","url":globals.prefix+"project-files/types/showsource.html"},{"title":"Source","text":"Specifies a path to Fortran source files. This can be specified multiple times and takes the following form:","tags":"","category":"","url":globals.prefix+"project-files/types/source.html"},{"title":"Tagline","text":"Specifies a tag-line for your project that will be shown within the header of the generated documentation. This can be specified once and takes the following form:","tags":"","category":"","url":globals.prefix+"project-files/types/tagline.html"},{"title":"UserPage","text":"Specifies that a non-source file should be included within the generated documentation. This can be specified multiple times and takes the following form:","tags":"","category":"","url":globals.prefix+"project-files/types/userpage.html"},{"title":"PATH","text":"In general a PATH value can take the form:","tags":"","category":"","url":globals.prefix+"project-files/values/path.html"},{"title":"Descriptive Comments","text":"A description can be placed anywhere within a block to describe that block's purpose. In the case of declarations of variables-like objects, a description must be placed on the line directly beneath the declaration line. A variable-like object refers to variables, arguments and components. A description made up of two parts, a basic and a detail part.","tags":"","category":"","url":globals.prefix+"source-comments/description-meta-data.html"},{"title":"Information Comments","text":"An information element specifies a specific property of a block. Any line of the form !> TYPE : DESCRIPTION, where TYPE is a string of alpha numeric characters, will be interpreted by Doctran as a information element. The TYPE specification is not case sensitive.","tags":"","category":"","url":globals.prefix+"source-comments/information-meta-data.html"},{"title":"Author","text":"An author information element is used to specify the person who wrote a block of code. It may be placed within any block of code and the information will be shown on that block's documentation page.","tags":"","category":"","url":globals.prefix+"source-comments/information-meta-data/author.html"}]};